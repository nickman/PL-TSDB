select * from v$sessmetric;
select * from v$session_event;
select * from v$session_wait;
select * from v$sesstat;
select * from v$sysmetric;
select * from v$system_event;
select * from v$buffer_pool_statistics;
select * from v$buffer_pool;
select * from v$datafile;
select * from v$db_object_cache;
select * from v$enqueue_stat;
select * from v$eventmetric;
select * from v$event_name;
select * from v$filemetric;
select * from v$filestat;
select * from v$latch;
select * from v$object_usage;
select * from v$open_cursor;
select * from v$pgastat;
select * from v$process;
select * from v$rollstat;
select * from v$sga;
select * from v$sgastat;
select * from v$sort_usage;
select * from v$sqlarea;
select * from v$sql_cursor;
select * from v$sysstat;
select * from v$waitstat;
*/


select value(t) from table(tsdb_tracer.sqltometrics(
  q'#      SELECT M.VALUE, TSDB_UTIL.CLEAN(N.NAME) NAME, 'CLASS', TSDB_TRACER.DECODE_CLASS(N.CLASS) CLAZZ
      FROM v$mystat M, v$statname N
      WHERE M.STATISTIC# = N.STATISTIC#
      AND EXISTS (
        SELECT COLUMN_VALUE FROM TABLE(TSDB_UTIL.USERSTATKEYS())
        WHERE COLUMN_VALUE = TSDB_UTIL.CLEAN(N.NAME)
      )#')) t;
      
      
declare
  tags TAGPAIR_ARR := TAGPAIR_ARR(TAGPAIR('aaa', 'zzz'), TAGPAIR('bbb', 'yyy'), TAGPAIR('ccc', 'xxx'));
  cnt INT := -1;
begin
  SELECT COUNT(*) INTO cnt FROM TABLE(tags) T WHERE K = 'aaa';
  DBMS_OUTPUT.PUT_LINE('COUNT of aaa:' || cnt);
  SELECT R INTO cnt FROM (SELECT ROWNUM R, T.K KEY FROM TABLE(tags) T) V WHERE V.KEY = 'bbb';
  DBMS_OUTPUT.PUT_LINE('OFFSET of bbb:' || cnt);
  INSERT INTO TABLE(tags) VALUES('eee', 'www');
end;


--select * from table(tsdb_tracer.sqltometrics(
--  q'#      SELECT M.VALUE, TSDB_UTIL.CLEAN(N.NAME) NAME, 'CLASS', TSDB_TRACER.DECODE_CLASS(N.CLASS) CLAZZ, 'FOO', 'BAR', SYSDATE - 1000
--      FROM v$mystat M, v$statname N
--      WHERE M.STATISTIC# = N.STATISTIC#
--      AND EXISTS (
--        SELECT COLUMN_VALUE FROM TABLE(TSDB_UTIL.USERSTATKEYS())
--        WHERE COLUMN_VALUE = TSDB_UTIL.CLEAN(N.NAME)
--      )#')) t;

begin TSDB_TRACER.CLEARTIMERS; END;

select TSDB_TRACER.STARTTIMERMETRIC(METRIC.PARSEMETRIC('sys.cpu:xhost=BBB'))
  .SLEEP(5)
  .CLOSE().JSONMS()
  from dual;
  
select TSDB_TRACER.STOPTIMER('sys.cpu:host=aaa,host=rv-wk-dmon-03,app=orcl,user=pltsdb').JSONMS() from dual;

-- 22-DEC-16 04.51.24.491343 PM], st: [22-DEC-16 04.51.19.476673000 PM]
select to_timestamp('22-DEC-16 04.51.24.491343 PM', 'DD-MM-RR HH.MI.SS.FF AM') from dual

select to_timestamp('22-DEC-16 04.51.24.491343 PM', 'DD-MM-RR HH.MI.SS.FF AM')  - to_timestamp('22-DEC-16 04.51.19.476673000 PM', 'DD-MM-RR HH.MI.SS.FF AM')
from dual

declare
  fromtime TIMESTAMP := to_timestamp('22-DEC-16 04.51.19.476673000 PM', 'DD-MM-RR HH.MI.SS.FF AM');
  totime TIMESTAMP := to_timestamp('22-DEC-16 04.51.24.491343 PM', 'DD-MM-RR HH.MI.SS.FF AM');
  delta CONSTANT INTERVAL DAY (9) TO SECOND  := totime - fromtime;
  elapsed NUMBER;
begin
  DBMS_OUTPUT.PUT_LINE('INTERVAL:' || delta);
  elapsed := TSDB_UTIL.ELAPSEDMS(fromtime, totime);
--  elapsed := ROUND(
--      (
--      (extract(day from delta)*24*60*60) + 
--      (extract(hour from delta)*60*60) + 
--      (extract(minute from delta)*60) + 
--      extract(second from delta)
--      ) * 1000
--    ,0);  
  DBMS_OUTPUT.PUT_LINE('ELAPSED:' || elapsed);
end;

select value(t) from table(tsdb_tracer.REFCURTOMETRICSINONLY(CURSOR(
  SELECT M.VALUE, TSDB_UTIL.CLEAN(N.NAME) NAME, 'CLASS', TSDB_TRACER.DECODE_CLASS(N.CLASS) CLAZZ
      FROM v$mystat M, v$statname N
      WHERE M.STATISTIC# = N.STATISTIC#
      AND EXISTS (
        SELECT COLUMN_VALUE FROM TABLE(TSDB_UTIL.USERSTATKEYS())
        WHERE COLUMN_VALUE = TSDB_UTIL.CLEAN(N.NAME)
      )))) t
      
begin
  update TSDB_CONFIG set v = '172.16.11.1' where k = 'tracing.http.host';
  commit;
  TSDB_UTIL.LOAD_CONFIG;
end;


SELECT VALUE(T).PUTMS() FROM TABLE(TSDB_TRACER.APPINFOTAGS(TSDB_TRACER.REFCURTOMETRICSINONLY(CURSOR(
    SELECT SUM(E.TIME_WAITED) * 10 TOTAL_TIME_WAITED, 'ora.system.timewaited.all', 'wait_type' , TSDB_UTIL.CLEAN(E.WAIT_CLASS, '_')
    FROM V$SYSTEM_EVENT E
    WHERE E.WAIT_CLASS != 'Idle'
    GROUP BY E.WAIT_CLASS
)))) T;


select * from V$SQLAREA where MODULE = 'OraScan';

-- SELECT METRICNAME || ':' || LISTAGG(T.K || '=' || T.V, ',') WITHIN GROUP (ORDER BY VALUE(T)) INTO key FROM TABLE(TAGS) T;
SELECT LISTAGG('SUM(' || column_name || ')', ',') within group (order by column_id) from user_tab_columns where table_name = 'DROPME';

SELECT MODULE, ACTION,
  SUM(SHARABLE_MEM) SHARABLE_MEM,SUM(PERSISTENT_MEM) PERSISTENT_MEM,SUM(RUNTIME_MEM) RUNTIME_MEM,SUM(SORTS) SORTS,SUM(USERS_OPENING) USERS_OPENING,SUM(FETCHES) FETCHES,
  SUM(EXECUTIONS) EXECUTIONS,SUM(PX_SERVERS_EXECUTIONS) PX_SERVERS_EXECUTIONS,SUM(END_OF_FETCH_COUNT) END_OF_FETCH_COUNT,SUM(USERS_EXECUTING) USERS_EXECUTING,SUM(LOADS) LOADS,
  SUM( INVALIDATIONS)  INVALIDATIONS,SUM(PARSE_CALLS) PARSE_CALLS,SUM(DISK_READS) DISK_READS,SUM(DIRECT_WRITES) DIRECT_WRITES,SUM(BUFFER_GETS) BUFFER_GETS,
  SUM(APPLICATION_WAIT_TIME) APPLICATION_WAIT_TIME,SUM(CONCURRENCY_WAIT_TIME) CONCURRENCY_WAIT_TIME,SUM(CLUSTER_WAIT_TIME) CLUSTER_WAIT_TIME,
  SUM(USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,SUM(PLSQL_EXEC_TIME) PLSQL_EXEC_TIME,SUM(SERIALIZABLE_ABORTS) SERIALIZABLE_ABORTS,SUM(CPU_TIME) CPU_TIME,
  SUM(ELAPSED_TIME) ELAPSED_TIME,SUM(IO_CELL_OFFLOAD_ELIGIBLE_BYTES) IO_CELL_OFFLOAD_ELIGIBLE_BYTES,SUM(IO_INTERCONNECT_BYTES) IO_INTERCONNECT_BYTES,
  SUM(PHYSICAL_READ_REQUESTS) PHYSICAL_READ_REQUESTS,SUM(PHYSICAL_READ_BYTES) PHYSICAL_READ_BYTES,SUM(PHYSICAL_WRITE_REQUESTS) PHYSICAL_WRITE_REQUESTS,
  SUM(PHYSICAL_WRITE_BYTES) PHYSICAL_WRITE_BYTES,SUM(OPTIMIZED_PHY_READ_REQUESTS) OPTIMIZED_PHY_READ_REQUESTS,SUM(LOCKED_TOTAL) LOCKED_TOTAL,SUM(PINNED_TOTAL) PINNED_TOTAL,
  SUM(IO_CELL_UNCOMPRESSED_BYTES) IO_CELL_UNCOMPRESSED_BYTES,SUM(IO_CELL_OFFLOAD_RETURNED_BYTES) IO_CELL_OFFLOAD_RETURNED_BYTES
FROM V$SQLAREA
WHERE MODULE = 'OraScan'
GROUP BY MODULE, ACTION;


  SHARABLE_MEM,PERSISTENT_MEM,RUNTIME_MEM,SORTS,USERS_OPENING,FETCHES,EXECUTIONS,PX_SERVERS_EXECUTIONS,
  END_OF_FETCH_COUNT,USERS_EXECUTING,LOADS, INVALIDATIONS,PARSE_CALLS,DISK_READS,DIRECT_WRITES,BUFFER_GETS,
  APPLICATION_WAIT_TIME,CONCURRENCY_WAIT_TIME,CLUSTER_WAIT_TIME,USER_IO_WAIT_TIME,PLSQL_EXEC_TIME,
  SERIALIZABLE_ABORTS,CPU_TIME,ELAPSED_TIME,IO_CELL_OFFLOAD_ELIGIBLE_BYTES,IO_INTERCONNECT_BYTES,PHYSICAL_READ_REQUESTS,
  PHYSICAL_READ_BYTES,PHYSICAL_WRITE_REQUESTS,PHYSICAL_WRITE_BYTES,OPTIMIZED_PHY_READ_REQUESTS,LOCKED_TOTAL,PINNED_TOTAL,
  IO_CELL_UNCOMPRESSED_BYTES,IO_CELL_OFFLOAD_RETURNED_BYTES


SELECT SUM(SHARABLE_MEM), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('SHARABLE_MEM'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PERSISTENT_MEM), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PERSISTENT_MEM'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(RUNTIME_MEM), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('RUNTIME_MEM'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(SORTS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('SORTS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(USERS_OPENING), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('USERS_OPENING'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(FETCHES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('FETCHES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(EXECUTIONS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('EXECUTIONS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PX_SERVERS_EXECUTIONS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PX_SERVERS_EXECUTIONS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(END_OF_FETCH_COUNT), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('END_OF_FETCH_COUNT'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(USERS_EXECUTING), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('USERS_EXECUTING'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(LOADS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('LOADS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM( INVALIDATIONS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN(' INVALIDATIONS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PARSE_CALLS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PARSE_CALLS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(DISK_READS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('DISK_READS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(DIRECT_WRITES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('DIRECT_WRITES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(BUFFER_GETS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('BUFFER_GETS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(APPLICATION_WAIT_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('APPLICATION_WAIT_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(CONCURRENCY_WAIT_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('CONCURRENCY_WAIT_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(CLUSTER_WAIT_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('CLUSTER_WAIT_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(USER_IO_WAIT_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('USER_IO_WAIT_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PLSQL_EXEC_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PLSQL_EXEC_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(SERIALIZABLE_ABORTS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('SERIALIZABLE_ABORTS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(CPU_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('CPU_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(ELAPSED_TIME), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('ELAPSED_TIME'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(IO_CELL_OFFLOAD_ELIGIBLE_BYTES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('IO_CELL_OFFLOAD_ELIGIBLE_BYTES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(IO_INTERCONNECT_BYTES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('IO_INTERCONNECT_BYTES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PHYSICAL_READ_REQUESTS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PHYSICAL_READ_REQUESTS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PHYSICAL_READ_BYTES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PHYSICAL_READ_BYTES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PHYSICAL_WRITE_REQUESTS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PHYSICAL_WRITE_REQUESTS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PHYSICAL_WRITE_BYTES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PHYSICAL_WRITE_BYTES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(OPTIMIZED_PHY_READ_REQUESTS), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('OPTIMIZED_PHY_READ_REQUESTS'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(LOCKED_TOTAL), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('LOCKED_TOTAL'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(PINNED_TOTAL), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('PINNED_TOTAL'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(IO_CELL_UNCOMPRESSED_BYTES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('IO_CELL_UNCOMPRESSED_BYTES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION
UNION ALL
SELECT SUM(IO_CELL_OFFLOAD_RETURNED_BYTES), 'ora.appinfo.sql.' || TSDB_UTIL.CLEAN('IO_CELL_OFFLOAD_RETURNED_BYTES'), 'module', TSDB_UTIL.CLEAN(MODULE), 'action', TSDB_UTIL.CLEAN(ACTION) FROM V$SQLAREA WHERE MODULE IS NOT NULL AND ACTION IS NOT NULL GROUP BY MODULE,ACTION

