CREATE USER PLTSDB IDENTIFIED BY plt;
GRANT CREATE SESSION TO PLTSDB;
GRANT RESOURCE TO PLTSDB;
GRANT UNLIMITED TABLESPACE TO PLTSDB;
GRANT EXECUTE ON DBMS_LOCK TO PLTSDB;
GRANT EXECUTE ON DBMS_TRANSACTION to PLTSDB;
GRANT EXECUTE ON DBMS_ALERT TO PLTSDB;
GRANT EXECUTE ON DBMS_APPLICATION_INFO TO PLTSDB;
GRANT EXECUTE ON DBMS_SQL TO PLTSDB;
GRANT EXECUTE ON DBMS_SESSION TO PLTSDB;
GRANT SELECT ANY DICTIONARY TO PLTSDB;
--GRANT SELECT ON V_$TRANSACTION TO PLTSDB;
--GRANT SELECT ON v_$MYSTAT to PLTSDB;
--GRANT SELECT ON v_$OSSTAT to PLTSDB;
--GRANT SELECT ON v_$STATNAME to PLTSDB;
--GRANT SELECT ON V_$EVENT_NAME to PLTSDB;
--GRANT SELECT ON V_$WAITCLASSMETRIC to PLTSDB;

BEGIN
  DBMS_NETWORK_ACL_ADMIN.CREATE_ACL(acl=>'pltsdb.xml', description=>'PL/TSDB Network Access Control', principal=>'PLTSDB', is_grant=>TRUE, privilege=>'connect');
  COMMIT;
END;

/

BEGIN 
  DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL(acl=>'pltsdb.xml',host=>'*'); 
  COMMIT;
END;

/

<<<<<<< HEAD
-- Procedure to drop ACL
/*
BEGIN
  DBMS_NETWORK_ACL_ADMIN.DROP_ACL('pltsdb.xml');
  COMMIT;
END;
*/
=======
-- Run these after PLTSDB schema objects have been created
CREATE PUBLIC SYNONYM VARCHAR2_ARR FOR PLTSDB.VARCHAR2_ARR;
CREATE PUBLIC SYNONYM INT_ARR FOR PLTSDB.INT_ARR;
CREATE PUBLIC SYNONYM TSDB_UTIL FOR PLTSDB.TSDB_UTIL;
CREATE PUBLIC SYNONYM LOGGING FOR PLTSDB.LOGGING;
CREATE PUBLIC SYNONYM TAGPAIR FOR PLTSDB.TAGPAIR;
CREATE PUBLIC SYNONYM TAGPAIR_ARR FOR PLTSDB.TAGPAIR_ARR;
CREATE PUBLIC SYNONYM METRIC FOR PLTSDB.METRIC;
CREATE PUBLIC SYNONYM METRIC_ARR FOR PLTSDB.METRIC_ARR;
CREATE PUBLIC SYNONYM METRIC_EXT FOR PLTSDB.METRIC_EXT;
CREATE PUBLIC SYNONYM METRIC_EXT_ARR FOR PLTSDB.METRIC_EXT_ARR;
CREATE PUBLIC SYNONYM TSDB_TRACER FOR PLTSDB.TSDB_TRACER;
GRANT EXECUTE ON PLTSDB.TSDB_UTIL TO PUBLIC;
GRANT EXECUTE ON PLTSDB.LOGGING TO PUBLIC;
GRANT EXECUTE ON PLTSDB.TSDB_TRACER TO PUBLIC;


>>>>>>> c2c8203fa02493a1148168ad4ad737c1eaa344f3
